:py:mod:`BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils`
=========================================================

.. py:module:: BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.add_empties
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.add_empty
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.get_object_by_name
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.purge_orphan_data
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.get_pbone_worldspace
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.set_pbone_worldspace
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.set_mode
   BlendArMocap.src.cgt_core.cgt_bpy.cgt_bpy_utils.user_pref



.. py:function:: add_empties(data: dict, size: float, prefix: str = '', suffix: str = '') -> List[bpy.types.Object]


.. py:function:: add_empty(size, name, display='ARROWS') -> bpy.types.Object


.. py:function:: get_object_by_name(name) -> Optional[bpy.types.Object]


.. py:function:: purge_orphan_data()


.. py:function:: get_pbone_worldspace(pose_bone: bpy.types.PoseBone, rig: bpy.types.Object) -> List[float]

   Gets world space position of a pose bone. 


.. py:function:: set_pbone_worldspace(pose_bone: bpy.types.PoseBone, rig: bpy.types.Object, position: mathutils.Vector) -> None

   Sets a pose bone to target world space position. 


.. py:function:: set_mode(mode: str = None) -> bool

   MODES: 'EDIT', 'OBJECT', 'POSE' 


.. py:function:: user_pref()


