:py:mod:`BlendArMocap.src.cgt_transfer.cgt_tf_operators`
========================================================

.. py:module:: BlendArMocap.src.cgt_transfer.cgt_tf_operators


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_UI_CGT_smooth_empties
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_RegenerateMetarig
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_ObjectMinMax
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_TransferObjectProperties
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_SaveObjectProperties
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_LoadObjectProperties
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_DeleteObjectProperties
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.OT_CGT_ApplyObjectProperties



Functions
~~~~~~~~~

.. autoapisummary::

   BlendArMocap.src.cgt_transfer.cgt_tf_operators.register
   BlendArMocap.src.cgt_transfer.cgt_tf_operators.unregister



Attributes
~~~~~~~~~~

.. autoapisummary::

   BlendArMocap.src.cgt_transfer.cgt_tf_operators.classes


.. py:class:: OT_UI_CGT_smooth_empties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Smooth'

      

   .. py:attribute:: bl_idname
      :value: 'button.smooth_selected_empties'

      

   .. py:attribute:: bl_description
      :value: 'Smooth animation data of selected objects.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:class:: OT_CGT_RegenerateMetarig

   Bases: :py:obj:`bpy.types.Operator`

   TODO: Implement regen 

   .. py:attribute:: bl_label
      :value: 'Regenerate Metarig'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_regenerate_metarig'

      

   .. py:attribute:: bl_description
      :value: 'Regenerates the metarig from a rigify rig.'

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context: bpy.context)



.. py:class:: OT_CGT_ObjectMinMax

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Object MinMax-fCurve'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_fcurve_min_max'

      

   .. py:attribute:: bl_description
      :value: 'Get minimum and maximum values from objects fCurves.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: get_minmax_dist(a, b)


   .. py:method:: get_minmax_transforms(ob, use_loc=True, use_rot=True, use_sca=True)


   .. py:method:: execute(context: bpy.context)



.. py:class:: OT_CGT_TransferObjectProperties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Transfer from selected'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_transfer_selection'

      

   .. py:attribute:: bl_description
      :value: 'Transfer properties from selected objects by generating drivers and populating constraints.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:class:: OT_CGT_SaveObjectProperties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Save Transfer Properties'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_save_properties'

      

   .. py:attribute:: bl_description
      :value: 'Saves transfer properties from available objects to file.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:class:: OT_CGT_LoadObjectProperties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Load Transfer Properties'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_load_properties'

      

   .. py:attribute:: bl_description
      :value: 'Load transfer properties to objects.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:class:: OT_CGT_DeleteObjectProperties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Delete Transfer Properties'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_delete_properties'

      

   .. py:attribute:: bl_description
      :value: 'Delete transfer properties file.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:class:: OT_CGT_ApplyObjectProperties

   Bases: :py:obj:`bpy.types.Operator`

   .. py:attribute:: bl_label
      :value: 'Apply Transfer Properties'

      

   .. py:attribute:: bl_idname
      :value: 'button.cgt_object_apply_properties'

      

   .. py:attribute:: bl_description
      :value: 'Apply transfer properties from available objects.'

      

   .. py:attribute:: bl_options

      

   .. py:method:: poll(context)
      :classmethod:


   .. py:method:: execute(context)



.. py:data:: classes

   

.. py:function:: register()


.. py:function:: unregister()


